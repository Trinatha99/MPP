@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Course Create";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}
<style>
    #preloader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid #fff;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

</style>
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-pie-chart mr-1"></i> Course Master</a></li>
        <li class="breadcrumb-item active" aria-current="page">Course</li>
    </ol>
    <div class="ml-auto">
        <a href="~/Course/CourseList" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> View
        </a>
    </div>
</div>


<div class="row">
    <div class="col-md">
        <div class="card overflow-hidden">
            <div class="card-header">
                <h3 class="card-title">Course Create</h3>
            </div>
            <div class="card-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">


                        <div class="col-lg-3">
                            <div class="form-group">
                                <label class="control-label">Course Name <span style="color: red;"><b>*</b></span></label>
                                <input type="text" class="form-control" autocomplete="off" id="coursename" name="coursename" placeholder="Course Name" required />
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <button type="button" id="btnSave" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />

@section scripts{
 
    <script>
        //Create
        $(function () {

            $("#btnSave").click(function (e) {

                if (!document.getElementById("formPost").checkValidity()) {
                    e.preventDefault();
                }
                else {
                    var model = {
                        courseName: $.trim($("#coursename").val()),
                        createdBy: @Context.Session.GetInt32("UserId"),
                    }
                    console.log(model)
                    $.ajax({
                        type: "POST",
                        url: "@apiUrl/api/Course/CreateCourse",
                        data: JSON.stringify(model),
                        contentType: "application/json; charset=utf-8",
                        headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                        },
                        dataType: "json",
                        success: function (data, statusText, xhr) {
                            if (xhr.status === 200) {

                                sweetAlert({
                                    html: true,
                                    icon: "success",
                                    title: "Course",
                                    text: "Successfully created!",
                                    type: "success"
                                });
                            } else if (data.status === "duplicate") {
                                sweetAlert("Validation Alert!", data.responseMsg, "warning");
                            } else if (data.status === "error") {
                                sweetAlert("Validation Alert!", data.responseMsg, "warning");
                            } else {
                                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                            }
                        },
                        error: function (data) {
                            if (data.status == 401) {
                                window.location.replace('/Message/TokenExpire');
                            } else if (data.status == 403) {
                                window.location.replace('/Message/Unauthorize');
                            } else if (data.status == 400) {
                                sweetAlert("Validation Alert!", "Please check input data!", "warning");
                            }
                        }
                    });
                }
            });
        });
    </script>

}
