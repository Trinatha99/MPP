@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "SubCourse Edit";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-pie-chart mr-1"></i> Admin Console</a></li>
        <li class="breadcrumb-item active" aria-current="page">SubCourse</li>
    </ol>
    <div class="ml-auto">
        <a href="~/SubCourse/SubCourseList" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> View
        </a>
    </div>
</div>

<div class="col-md-12 col-lg-12">
    <div class="card">
        <div class="card-header">
            <div class="col-md-11">
                <div class="card-title">SubCourse Create</div>
            </div>
        </div>
        <div class="card-body">
            <div>
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-label">Course Name <span style="color: red;"><b>*</b></span></label>
                                        <select class="form-control" autocomplete="off" id="courseid" required></select>
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-label">SubCourse Name <span style="color: red;"><b>*</b></span></label>
                                        <input type="text" class="form-control" autocomplete="off" id="subcoursename" name="subcoursename" placeholder="SubCourse Name" required />
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-label">SubCourse Details <span style="color: red;"><b>*</b></span></label>
                                        <textarea type="text" class="form-control" autocomplete="off" id="subcoursedetails" name="subcoursedetails" placeholder="SubCourse Details" required></textarea>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-label">SubCourse Duration <span style="color: red;"><b>*</b></span></label>
                                        <input type="text" class="form-control" autocomplete="off" id="subcourseduration" name="subcourseduration" placeholder="SubCourse Duration" required />
                                    </div>
                                </div>
                            </div>

                               @* <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">SubCourse Image <span style="color: red;"><b>*</b></span></label>
                                        <input type="file" class="form-control" id="subcourseimg" required>
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <img id="productimgg" src="" width="100" class="rounded-circle">
                                    </div>
                                </div>*@
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="form-label">SubCourse Price</label>
                                        <input type="text" class="form-control" autocomplete="off" id="subcourseprice" name="subcourseprice" placeholder="SubCourse Price" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">DiscountAmount &nbsp;<span style="color: red;"><b>*</b></span></label>
                                        <input type="text" class="form-control" id="DiscountAmount" placeholder="Enter DiscountAmount">
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">SalePrice &nbsp;<span style="color: red;"><b>*</b></span></label>
                                        <input type="text" class="form-control" id="SalePrice" placeholder="Enter SalePrice">
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="form-group">
                                        <label class="control-label">YouTube Video URL</label>
                                        <input type="text" class="form-control" id="youtubeVideoUrl" name="youtubeVideoUrl" placeholder="YouTube Video URL" />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <button type="button" id="btnUpdate" class="btn btn-primary">Update</button>
                                </div>
                            </div>
                            <br />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />

@section scripts{
    <script>
        function CourseList(selectedCourseId) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/Course/GetCourseList",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        console.log("Course list loaded", res);
                        var options = [];
                        options.push('<option value="">Select Course</option>');
                        for (var i = 0; i < res.data.length; i++) {
                            var opt = (selectedCourseId == res.data[i].courseId) ? 'selected' : '';
                            options.push('<option value="' + res.data[i].courseId + '" ' + opt + '>' + res.data[i].courseName + '</option>');
                        }
                        $("#courseid").html(options.join(''));
                        resolve();
                    },
                    error: function (data) {
                        console.error("Error loading course list", data);
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                        reject(data);
                    }
                });
            });
        }

        var subCourseId = @ViewBag.subcourseid;
        loadSingleCourse();

        function loadSingleCourse() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/SubCourse/GetSingleSubCourse/" + subCourseId,
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (data) {
                    console.log("Sub-course data loaded", data);
                    if (data) {
                        CourseList(data.courseId).then(() => {
                            $('#subcoursename').val(data.subCourseName);
                            $('#subcoursedetails').val(data.subCourseDetails);
                            $('#subcourseduration').val(data.subCourseDuration);
                            $('#subcourseprice').val(data.subCoursePrice);
                            $('#DiscountAmount').val(data.discountAmount);
                            $('#SalePrice').val(data.salePrice);
                            $('#youtubeVideoUrl').val(data.video);
                        }).catch(err => {
                            console.error("Error setting sub-course data", err);
                        });
                    } else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    console.error("Error loading sub-course data", data);
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        $("#Update").click(function (e) {
            e.preventDefault();
            if (!document.getElementById("formPost").checkValidity()) {
                console.error("Form validation failed.");
                return;
            }

            var youtubeUrl = $.trim($("#youtubeVideoUrl").val());
            var youtubeVideoId = getYouTubeVideoId(youtubeUrl);
            if (youtubeVideoId == null) {
                sweetAlert("Validation Alert!", "Invalid YouTube URL", "warning");
                return;
            }

            var model = {
                subCourseId: subCourseId,
                courseId: $.trim($("#courseid").val()),
                subCourseName: $.trim($("#subcoursename").val()),
                subCourseDetails: $.trim($("#subcoursedetails").val()),
                subCourseDuration: $.trim($("#subcourseduration").val()),
                subCoursePrice: $.trim($("#subcourseprice").val()),
                discountAmount: $.trim($("#DiscountAmount").val()),
                salePrice: $.trim($("#SalePrice").val()),
                video: youtubeVideoId,
                updatedBy: @Context.Session.GetInt32("UserId")
                    };
            console.log("Model to be sent:", model);

            $.ajax({
                type: "POST",
                url: "@apiUrl/api/SubCourse/UpdateSubCourse",
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                success: function (data, statusText, xhr) {
                    console.log("Update response:", data);
                    if (xhr.status === 200) {
                        sweetAlert({
                            html: true,
                            icon: "success",
                            title: "SubCourse Update",
                            text: "Successfully updated!",
                            type: "success"
                        }).then(() => {
                            window.location.href = '/Subject/SubjectList';
                        });
                    } else {
                        handleErrorResponse(data);
                    }
                },
                error: function (data) {
                    console.error("Error updating sub-course", data);
                    handleErrorResponse(data);
                }
            });
        });

        function handleErrorResponse(data) {
            if (data.status == 401) {
                window.location.replace('/Message/TokenExpire');
            } else if (data.status == 403) {
                window.location.replace('/Message/Unauthorize');
            } else if (data.status == 400) {
                sweetAlert("Validation Alert!", "Please check input data!", "warning");
            } else {
                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
            }
        }

        function getYouTubeVideoId(url) {
            var regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
            var match = url.match(regex);
            return match ? match[1] : null;
        }
    </script>
}


@*@section scripts{
    <script>
        function CourseList(selectedCourseId) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/Course/GetCourseList",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        console.log("Course list loaded", res);
                        var options = [];
                        options.push('<option value="">Select Course</option>');
                        for (var i = 0; i < res.data.length; i++) {
                            var opt = (selectedCourseId == res.data[i].courseId) ? 'selected' : '';
                            options.push('<option value="' + res.data[i].courseId + '" ' + opt + '>' + res.data[i].courseName + '</option>');
                        }
                        $("#courseid").html(options.join(''));
                        resolve();
                    },
                    error: function (data) {
                        console.error("Error loading course list", data);
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                        reject(data);
                    }
                });
            });
        }

        var subCourseId = @ViewBag.subcourseid;
        loadSingleCourse();

        function loadSingleCourse() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/SubCourse/GetSingleSubCourse/" + subCourseId,
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (data) {
                    console.log("Sub-course data loaded", data);
                    if (data) {
                        CourseList(data.courseId).then(() => {
                            $('#subcoursename').val(data.subCourseName);
                            $('#subcoursedetails').val(data.subCourseDetails);
                            $('#subcourseduration').val(data.subCourseDuration);
                            $('#subcourseprice').val(data.subCoursePrice);
                            $('#DiscountAmount').val(data.discountAmount);
                            $('#SalePrice').val(data.salePrice);
                            $('#youtubeVideoUrl').val(data.video);
                        }).catch(err => {
                            console.error("Error setting sub-course data", err);
                        });
                    } else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    console.error("Error loading sub-course data", data);
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        $("#Update").click(function (e) {
            if (!document.getElementById("formPost").checkValidity()) {
                e.preventDefault();
                console.error("Form validation failed.");
            } else {
                var youtubeUrl = $.trim($("#youtubeVideoUrl").val());
                var youtubeVideoId = getYouTubeVideoId(youtubeUrl);
                if (youtubeVideoId == null) {
                    sweetAlert("Validation Alert!", "Invalid YouTube URL", "warning");
                    return;
                }
                var model = {
                    subCourseId: subCourseId,
                    courseId: $.trim($("#courseid").val()),
                    subCourseName: $.trim($("#subcoursename").val()),
                    subCourseDetails: $.trim($("#subcoursedetails").val()),
                    subCourseDuration: $.trim($("#subcourseduration").val()),
                    subCoursePrice: $.trim($("#subcourseprice").val()),
                    discountAmount: $.trim($("#DiscountAmount").val()),
                    salePrice: $.trim($("#SalePrice").val()),
                    video: youtubeVideoId,
                    updatedBy: @Context.Session.GetInt32("UserId"),
                };
                console.log("Model to be sent:", model);

                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/SubCourse/UpdateSubCourse",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    success: function (data, statusText, xhr) {
                        console.log("Update response:", data);
                        if (xhr.status === 200) {
                            $('#Subject_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                icon: "success",
                                title: "SubCourse Update",
                                text: "Successfully updated!",
                                type: "success"
                            });
                        } else if (data.status === "duplicate") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else if (data.status === "error") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        console.error("Error updating sub-course", data);
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                });
            }
        });

        function getYouTubeVideoId(url) {
            var regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
            var match = url.match(regex);
            return match ? match[1] : null;
        }
    </script>
}*@
